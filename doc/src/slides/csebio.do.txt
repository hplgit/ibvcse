TITLE: Integrating computations, mathematics, physics and chemistry in undergraduate biology programs
AUTHOR: Morten Hjorth-Jensen at Dept. of Physics, UiO & Dept. of Physics, Michigan State University
AUTHOR: Hans Petter Langtangen at Dept. of Informatics, UiO & Center for Biomedical Computing, Simula
DATE: today

!split
===== Overarching questions =====

!bblock
!bpop
 * Which skills are needed by MSc candidates in biology?
 * There is new demand for more
  * quantitative methods & reasoning
  * understanding data and phenomena via models
  * creating *in silico* virtual labs
 * How to integrate such computing-based activities in the bachelor programs?
!epop
!eblock

!split
===== How to teach computing in biology? =====

!bblock
!bpop
 * Do we need to still following the tradition and teach mathematics, physics, computations, chemistry, etc. in separate discipline-specific courses?
 * Results:
  * uninteresting to first study tools when you want to study biology
  * little understanding of what the tools are good for
  * minor utilization of tools later in biology
 * It's time for new thinking:
  * Just-in-time teaching: teach tools *when needed*
  * Teach tools in the *context of biology*
  * Emphasize development of *intuition and understanding*
  * Base learning of the students' own *explorations*
  * Base teaching on examples and projects (from biology)
  * Integrate lab work with computing tools
  * Teach tools in BIOxxxx courses - this emphasizes the importance of
    computing, physics, mathematics, ... in biology
 * Corollary: this new thinking can be applied in chemistry, geology, ...
   and all non-math-oriented programs
!epop
!eblock


!split
===== Current status =====

!bblock
 * CSE (*Computing in Science Education*) in life science is a faculty
   priority area
 * Core professors in the CSE project and 5 IBV professors
   are dedicated to implementation
 * 4 CINPLA PhD students have excellent background for and strong interests
   in the implementation
 * Let's roll!
!eblock

!split
===== Possible pilot project =====

!bblock
 * 1 year: Oct 2014 - Oct 2015
 * Form a project team of dedicated CSE+IBV people and CINPLA PhD students
 * Develop a pedagogical framework
 * CSE+IBV people identify a set of possible examples
 * PhD students work closely with CSE+IBV people to find data,
   define models, and write documents
 * Intro course in computing and programming for IBV teachers, using
   selected examples (spring 2015)
 * Educational workshop at IBV:
   * Present results from the project
   * Discuss how and where to implement examples in BIOxxxx courses
 * Fall 2016: First integration of computing in courses
!eblock


!split
===== The pedagogical framework =====

!bblock Aim: Develop student intuition about the scientific method
 * Method: problem-based learning
 * Coherent problem solving *in biology* by integrating
   mathematics, programming, physics/chemistry, ...
 * Starting point: data from lab or field experiments
 * Visualize data
 * Derive computational models directly from mathematical reasoning
 * Program models, fit parameters, compare with data
 * Develop intuition and understanding based on
  * the principles behind the model
  * exploration of the model (``what if'')
  * prediction of new experiments
 * For each example, document this scientific method in a common, structured framework
!eblock

!split
===== Example 1: ecoli lab experiment =====

!bblock
Observations of no of bacteria vs time in seconds,
stored in Excel and written to a CVS file:

@@@CODE src/ecoli.csv
!eblock

!split
===== Visualize data =====

!bblock
 * Meet a text editor and a terminal window
 * Very basic Unix

First program:

!bc pypro
t = [0, 600, 1200, 1800, 2400, 3000, 3600,
     4200, 4800, 5400, 6000]
N = [100, 140, 250, 360, 480, 820, 1300, 1700, 2900, 3900, 7000]
import matplotlib.pyplot as plt
plt.plot(t, N, 'ro')
plt.xlabel('t [s]')
plt.ylabel('N')
plt.show()
!ec
!eblock

!split
===== Concepts that are implicitly introduced =====

!bblock
 * Lists or arrays of numbers
 * Plotting commands
 * Curve
 * Function of time

The concept of a continuous function $N(t)$ is not necessary.
All we need for a long time is the concept of a curve: straight lines
between points.
!eblock

!split
===== Read data from file =====

!bblock
!bc pypro
import numpy as np
data = np.loadtxt('ecoli.dat', delimiter=',')
print data
t = data[:,0]
N = data[:,1]
import matplotlib.pyplot as plt
plt.plot(t, N, 'ro')
plt.xlabel('t [s]')
plt.ylabel('N')
plt.show()
!ec

!bnotice Typical pattern:
The population grows faster and faster.
!enotice
!eblock

!split
===== Lab journal =====

!bblock
Use IPython notebook as lab journal.
!eblock


!split
===== How can we reason about the process? =====

# http://www.zo.utexas.edu/courses/Thoc/PopGrowth.html

!bblock
!bpop
 o Cells divide after $T$ seconds on average (one generation)
 o $2N$ celles divide otn twice as many new cells $\Delta N$ in a time
   interval $\Delta t$ as $N$ cells would: $\Delta N \propto N$
 o $N$ cells result in twice as many new individuals $\Delta N$ in
   time $2\Delta t$ as in time $\Delta t$: $\Delta N \propto\Delta t$
 o Same proportionality wrt death (repeat reasoning)
 o Proposed model: $\Delta N = b\Delta t N - d\Delta tN$ for some unknown
   constants $b$ (births) and $d$ (deaths)
 o Describe evolution in discrete time: $t_n=n\Delta t$
 o Program-friendly notation: $N$ at $t_n$ is $N^n$
 o Math model: $N^{n+1} = N^n + r\Delta N$ ($r=b-d)$
 o Program model: `N[n+1] = N[n] + r*dt*N[n]`
!epop
!eblock

!split
===== The first simple program =====

!bblock
Let us solve the difference equation in as simple way as possible,
just to train some programming: $r=1.5$, $N^0=1$, $\Delta t=0.5$

@@@CODE src/diffeq.py
!eblock

% if FORMAT != 'ipynb':
!split
===== The output =====

!bc
N[1]=1.2
N[2]=1.6
N[3]=2.0
N[4]=2.4
N[5]=3.1
N[6]=3.8
N[7]=4.8
N[8]=6.0
N[9]=7.5
N[10]=9.3
N[11]=11.6
N[12]=14.6
N[13]=18.2
N[14]=22.7
N[15]=28.4
N[16]=35.5
N[17]=44.4
N[18]=55.5
N[19]=69.4
N[20]=86.7
!ec
% endif

!split
===== Parameter estimation =====

!bblock
 * We do not know $r$
 * How can we estimate $r$ from data?

We can use the difference equation with the experimental data

!bt
\[ N^{n+1} = N^n + r\Delta t N^n\]
!et
Say $N^{n+1}$ and $N^n$ are known from data, solve wrt $r$:

!bt
\[ r = \frac{N^{n+1}-N^n}{N^n\Delta t} \]
!et

Use experimental data in the fraction, say $t_1=600$, $t_2=1200$,
$N^1=140$, $N^2=250$: $r=0.0013$.

!bnotice More sophisticated methods
Can do a nonlinear least squares parameter fit, but that is
too advanced at this stage.
!enotice
!eblock

!split
===== A program relevant for the biological problem =====

# exact r = 0.000694

!bblock
@@@CODE src/ecoli.py
!eblock

!split
===== Discuss the nature of such a model =====

!bblock
 * Write up all the biological factors that influence the
   population size of bacteria
 * Understand that all such effects are merged into one parameter $r$
 * Understand that the reasoning must be the same whether we
   have bacteria, animals or humans - this is a generic model!
!eblock

!split
===== Adding model complexity: Predator-Prey model from ecology =====

!bblock
The population dynamics of a simple predator-prey system is a
classical example shown in many biology textbooks when ecological
systems are discussed. The system contains all elements of the
scientific method:

 * The set up of a specific hypothesis combined with
 * the experimental methods needed (one can study existing data or perform experiments)
 * analyzing and interpreting the data and performing further experiments if needed
 * trying to extract general behaviors and extract eventual laws or patterns
 * develop mathematical relations for the uncovered regularities/laws and test these by performing new experiments
!eblock


!split
===== Case study from Hudson bay =====

!bblock
Lots of data about populations of hares and lynx collected from furs in Hudson Bay, Canada, are available. It is known that the populations oscillate. Why?
We shall demonstrate the scientific method by

 o plotting the data
 o derive a simple model for the population dynamics
 o (fitting parameters in the model to the data)
 o using the model predict the evolution other predator-pray systems
!eblock

!split
===== Hudson bay data =====


!bblock
% if FORMAT == 'ipynb':
Most mammalian predators rely on a variety of prey, which complicates mathematical modeling; however, a few predators have become highly specialized and seek almost exclusively a single prey species. An example of this simplified predator-prey interaction is seen in Canadian northern forests, where the populations of the lynx and the snowshoe hare are intertwined in a life and death struggle.

One reason that this particular system has been so extensively studied is that the Hudson Bay company kept careful records of all furs from the early 1800s into the 1900s. The records for the furs collected by the Hudson Bay company showed distinct oscillations (approximately 12 year periods), suggesting that these species caused almost periodic fluctuations of each other's populations. The table here shows data from 1900 to 1920.
% endif

|------------------------------------------------------|
|      Year         |     Hares (x1000)  | Lynx (x1000)|
|---------l-----------------------r--------------r------|
|  1900 | 30.0  | 4.0  |
|  1901 | 47.2  | 6.1 |
|  1902 | 70.2  | 9.8  |
|  1903 | 77.4  | 35.2  |
|  1904 | 36.3  | 59.4  |
|  1905 | 20.6  | 41.7  |
|  1906 | 18.1  | 19.0  |
|  1907 | 21.4  | 13.0  |
|  1908 | 22.0  | 8.3  |
|  1909 | 25.4  | 9.1  |
|  1910 | 27.1  | 7.4 |
|  1911 | 40.3  | 8.0  |
|  1912 | 57  | 12.3  |
|  1913 | 76.6  | 19.5  |
|  1914 | 52.3  | 45.7  |
|  1915 | 19.5  | 51.1  |
|  1916 | 11.2  | 29.7  |
|  1917 | 7.6  | 15.8  |
|  1918 | 14.6  | 9.7  |
|  1919 | 16.2  | 10.1  |
|  1920 | 24.7  | 8.6  |
|------------------------------------------------------|

!eblock



!split
===== Plotting the data =====

[hpl: I greatly simplified the plotting and used only basic Matplotlib syntax, and made sure we prefix `plt.`. The plot is approx the same apart from smaller fontsize (by default).]

!bblock
@@@CODE src/plot_Hudson.py
!eblock

!split
===== Hares and lynx in Hudson bay from 1900 to 1920 =====

FIGURE: [fig/Hudson_Bay_data, width=700 frac=0.9]


!split
===== Why now create a computer model for the hare and lynx populations? =====
!bblock
% if FORMAT == 'ipynb':
We see from the plot that there are indeed fluctuations.
We would like to create a mathematical model that explains these
population fluctuations. Ecologists have predicted that in a simple
predator-prey system that a rise in prey population is followed (with
a lag) by a rise in the predator population. When the predator
population is sufficiently high, then the prey population begins
dropping. After the prey population falls, then the predator
population falls, which allows the prey population to recover and
complete one cycle of this interaction. Thus, we see that
qualitatively oscillations occur. Can a mathematical model predict
this? What causes cycles to slow or speed up? What affects the
amplitude of the oscillation or do you expect to see the oscillations
damp to a stable equilibrium? The models tend to ignore factors like
climate and other complicating factors. How significant are these?
% else:
 * We see oscillations in the data
 * What causes cycles to slow or speed up?
 * What affects the amplitude of the oscillation or do you expect to see the oscillations damp to a stable equilibrium?
 * With a model we can better *understand the data*
 * More important: we can understand the ecology dynamics of
   predator-pray populations
% endif
!eblock

!split
===== The traditional (top-down) approach =====
!bblock

The classical way (in all books) is to present the Lotka-Volterra equations:

!bt
\begin{align*}
\frac{dx}{dt} &= x(\alpha - \beta y)\\
\frac{dy}{dt} &= - y(\gamma - \delta  x)
\end{align*}
!et
Here,

 * $x$ is the number of preys
 * $y$ the number of predators
 * $\alpha$, $\beta$, $\gamma$, $\delta$ are parameters

Most books quickly establish the model and then use considerable space on
discussing the qualitative properties of this *nonlinear system of
ODEs* (which cannot be solved)
!eblock


!split
===== The ``new'' discrete bottom-up approach =====
!bblock The bottom-up approach
!bpop
 * Start with experimental data and discuss the methods which have been used to collect the data, the assumptions, the electronic devices, the aims etc. That is, expose the students to the theory and assumptions behind the data that have been collected and motivate for the scientific method.
 * Where appropriate the students should do the experiment(s) needed to collect the data.
 * The first programming tasks are to read and visualize the data to see if there are patterns or regularities. This strengthens a research-driven intuition.
 * Now we want to increase the understanding through modeling.
 * Most of the biology lies in the *derivation* of the model. We shall
   focus on an intuitive discrete approach that leads to difference
   equations that can be programmed directly.
!epop
!eblock


!split
===== Basic (computer-friendly) mathematics notation =====
!bblock
 * Time points: $t_0,t_1,\ldots,t_m$
 * Uniform distribution of time points: $t_n=n\Delta t$
 * $H^n$: population of hares at time $t_n$
 * $L^n$: population of lynx at time $t_n$
 * We want to model the changes in populations, $\Delta H=H^{n+1}-H^n$
   and $\Delta L=L^{n+1}-L^n$ during a general time interval $[t_{n+1},t_n]$
   of length $\Delta t=t_{n+1}-t_n$
!eblock

!split
===== Basic dynamics of the population of hares =====

!bblock
The population of hares evolves due to births and deaths exactly as a bacteria population:

!bt
\[
\Delta H = \alpha \Delta t H^n
\]
!et
However, hares have an additional loss in the population because
they are eaten by lynx.
All the hares and lynx can form
$H\cdot L$ pairs in total. When such pairs meet during a time
interval $\Delta t$, there is some
small probablity that the lynx will eat the hare.
So in fraction $\beta\Delta t HL$, the lynx eat hares. This
loss of hares and must be accounted for:
subtracted in the equation for hares:

!bt
\[ \Delta H = \alpha\Delta t H^n - \beta \Delta t H^nL^n\]
!et
!eblock

!split
===== Basic dynamics of the population of lynx =====

!bblock
We assume that the primary growth for the lynx population depends on sufficient food for raising lynx kittens, which implies an adequate source of nutrients from predation on hares. Thus, the growth of the lynx population does not only depend of how many lynx there are, but on how many hares they can eat.
In a time interval $\Delta t HL$ hares and lynx can meet, and in a
fraction $\beta\Delta t HL$ the lynx eats the hare. All of this does not
contribute to the growth of lynx, again just a fraction of
$\beta\Delta t HL$ that we write as
$\gamma\Delta t HL$. In addition, lynx die just as in the population
dynamics with one isolated animal population, leading to a loss
$-\delta\Delta t L$.

The accounting of lynx then looks like
!bt
\[ \Delta L = \gamma H^nL^n - \delta H^nL^n\]
!et
!eblock

!split
===== Evolution equations =====

!bblock
By writing up the definition of $\Delta H$ and $\Delta L$, and putting
all assumed known terms $H^n$ and $L^n$ on the right-hand side, we have

!bt
\begin{align*}
H^{n+1} &= H^n + \alpha H^n - \beta H^nL^n\\
L^{n+1} &= L^n + \gamma H^nL^n - \delta L^n
\end{align*}
!et
Note:

 * These equations are ready to be implemented!
 * But to start, we need $H^0$ and $L^0$ (which we can get from the data)
 * We also need values for $\alpha$, $\beta$, $\gamma$, $\delta$
!eblock

!split
===== Adapt the model to the Hudson Bay case =====

!bblock
 * As always, models tend to be general - as here, applicable
   to ``all'' predator-pray systems
 * The critical issue is whether the *interaction* between hares and lynx
   is sufficiently well modeled by $\hbox{const}HL$
 * The parameters $\alpha$, $\beta$, $\gamma$, and $\delta$ must be
   estimated from data
 * Measure time in years
 * $t_0=1900$, $t_m=1920$
!eblock

!split
===== The program =====

!bblock
@@@CODE src/Hudson_Bay.py
!eblock

% if FORMAT != 'ipynb':
!split
===== The plot =====

FIGURE: [fig/Hudson_Bay_sim, width=700 frac=0.9]

% else:
If we perform a least-square fitting, we can find optimal values for the parameters $\alpha\beta\gamma\delta$. The optimal parameters are $\alpha=0.4807$, $\beta=0.02482$, $\gamma=0.9272$ and $\delta=0.02756$. These parameters result in a slightly modified initial conditions, namely $H(0) = 34.91$ and $L(0)=3.857$. With these parameters we are now ready to solve the equations and plot these data together with the 'experimental values.
% endif

!split
===== Other examples =====
!bblock
 * Disease modeling
 * Predator-pray with disease
 * Bioinformatics: searching in strings
 * Move from difference equations to differential equations, would this be meaningful? Probably not - it does not give anything in biology before the models are so complex that one needs other things than Forward Euler...
!eblock




!split
===== Example of possible cases, Genomics  =====
!bblock
* Skal vi si noe om dette ogsaa eller holder det? Her kan vi snakke om feks enkle Markov DNA sekvenser
!eblock
